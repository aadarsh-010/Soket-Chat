{"ast":null,"code":"import * as Yup from \"yup\";\nexport const signUpSchema = Yup.object({\n  name: Yup.string().required(\"Name is required\").matches(/^[a-zA-Z_ ]*$/, \"No special characters allowed.\").min(2, \"Name must be between 2 and 16 characters.\").max(25, \"Name must be between 2 and 16 characters.\"),\n  email: Yup.string().required(\"Email address is required.\").email(\"Invalid email address.\"),\n  status: Yup.string().max(64, \"Status must be less than 64 characters.\"),\n  password: Yup.string().required(\"Password is required.\").matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/, \"Password must contain atleast 6 characters, 1 uppercase, 1 lowercase, 1 number and 1 special character.\")\n});\nexport const signInSchema = Yup.object({\n  email: Yup.string().required(\"Email address is required.\").email(\"Invalid email address.\"),\n  password: Yup.string().required(\"Password is required.\")\n});","map":{"version":3,"names":["Yup","signUpSchema","object","name","string","required","matches","min","max","email","status","password","signInSchema"],"sources":["E:/Soket-chat/Soket-Chat/Frontend/src/utils/validation.js"],"sourcesContent":["import * as Yup from \"yup\";\n\nexport const signUpSchema = Yup.object({\n  name: Yup.string()\n    .required(\"Name is required\")\n    .matches(/^[a-zA-Z_ ]*$/, \"No special characters allowed.\")\n    .min(2, \"Name must be between 2 and 16 characters.\")\n    .max(25, \"Name must be between 2 and 16 characters.\"),\n  email: Yup.string()\n    .required(\"Email address is required.\")\n    .email(\"Invalid email address.\"),\n  status: Yup.string().max(64, \"Status must be less than 64 characters.\"),\n  password: Yup.string()\n    .required(\"Password is required.\")\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/,\n      \"Password must contain atleast 6 characters, 1 uppercase, 1 lowercase, 1 number and 1 special character.\"\n    ),\n});\n\nexport const signInSchema = Yup.object({\n  email: Yup.string()\n    .required(\"Email address is required.\")\n    .email(\"Invalid email address.\"),\n  password: Yup.string().required(\"Password is required.\"),\n});\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,OAAO,MAAMC,YAAY,GAAGD,GAAG,CAACE,MAAM,CAAC;EACrCC,IAAI,EAAEH,GAAG,CAACI,MAAM,EAAE,CACfC,QAAQ,CAAC,kBAAkB,CAAC,CAC5BC,OAAO,CAAC,eAAe,EAAE,gCAAgC,CAAC,CAC1DC,GAAG,CAAC,CAAC,EAAE,2CAA2C,CAAC,CACnDC,GAAG,CAAC,EAAE,EAAE,2CAA2C,CAAC;EACvDC,KAAK,EAAET,GAAG,CAACI,MAAM,EAAE,CAChBC,QAAQ,CAAC,4BAA4B,CAAC,CACtCI,KAAK,CAAC,wBAAwB,CAAC;EAClCC,MAAM,EAAEV,GAAG,CAACI,MAAM,EAAE,CAACI,GAAG,CAAC,EAAE,EAAE,yCAAyC,CAAC;EACvEG,QAAQ,EAAEX,GAAG,CAACI,MAAM,EAAE,CACnBC,QAAQ,CAAC,uBAAuB,CAAC,CACjCC,OAAO,CACN,sEAAsE,EACtE,yGAAyG;AAE/G,CAAC,CAAC;AAEF,OAAO,MAAMM,YAAY,GAAGZ,GAAG,CAACE,MAAM,CAAC;EACrCO,KAAK,EAAET,GAAG,CAACI,MAAM,EAAE,CAChBC,QAAQ,CAAC,4BAA4B,CAAC,CACtCI,KAAK,CAAC,wBAAwB,CAAC;EAClCE,QAAQ,EAAEX,GAAG,CAACI,MAAM,EAAE,CAACC,QAAQ,CAAC,uBAAuB;AACzD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}