{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport createFilter from \"redux-persist-transform-filter\";\nimport storage from \"redux-persist/lib/storage\";\n//slices\nimport userSlice from \"../features/userSlice\";\nimport chatSlice from \"../features/chatSlice\";\n\n//saveUserOnlyFilter\nconst saveUserOnlyFilter = createFilter(\"user\", [\"user\"]);\n\n//persist config\nconst persistConfig = {\n  key: \"user\",\n  storage,\n  whitelist: [\"user\"],\n  transforms: [saveUserOnlyFilter]\n};\nconst rootReducer = combineReducers({\n  user: userSlice,\n  chat: chatSlice\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  }),\n  devTools: true\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["combineReducers","configureStore","persistReducer","persistStore","createFilter","storage","userSlice","chatSlice","saveUserOnlyFilter","persistConfig","key","whitelist","transforms","rootReducer","user","chat","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","devTools","persistor"],"sources":["E:/Soket-chat/Soket-Chat/Frontend/src/app/store.js"],"sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport createFilter from \"redux-persist-transform-filter\";\nimport storage from \"redux-persist/lib/storage\";\n//slices\nimport userSlice from \"../features/userSlice\";\nimport chatSlice from \"../features/chatSlice\";\n\n//saveUserOnlyFilter\nconst saveUserOnlyFilter = createFilter(\"user\", [\"user\"]);\n\n//persist config\nconst persistConfig = {\n  key: \"user\",\n  storage,\n  whitelist: [\"user\"],\n  transforms: [saveUserOnlyFilter],\n};\n\nconst rootReducer = combineReducers({\n  user: userSlice,\n  chat: chatSlice,\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n  devTools: true,\n});\n\nexport const persistor = persistStore(store);\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,SAASC,cAAc,EAAEC,YAAY,QAAQ,eAAe;AAC5D,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,OAAO,MAAM,2BAA2B;AAC/C;AACA,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,SAAS,MAAM,uBAAuB;;AAE7C;AACA,MAAMC,kBAAkB,GAAGJ,YAAY,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC;;AAEzD;AACA,MAAMK,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXL,OAAO;EACPM,SAAS,EAAE,CAAC,MAAM,CAAC;EACnBC,UAAU,EAAE,CAACJ,kBAAkB;AACjC,CAAC;AAED,MAAMK,WAAW,GAAGb,eAAe,CAAC;EAClCc,IAAI,EAAER,SAAS;EACfS,IAAI,EAAER;AACR,CAAC,CAAC;AACF,MAAMS,gBAAgB,GAAGd,cAAc,CAACO,aAAa,EAAEI,WAAW,CAAC;AAEnE,OAAO,MAAMI,KAAK,GAAGhB,cAAc,CAAC;EAClCiB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;EACrB,CAAC,CAAC;EACJC,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGpB,YAAY,CAACc,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}