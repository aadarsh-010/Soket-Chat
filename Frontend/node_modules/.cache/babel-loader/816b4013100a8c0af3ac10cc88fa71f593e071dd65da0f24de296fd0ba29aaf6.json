{"ast":null,"code":"var _jsxFileName = \"E:\\\\Soket-chat\\\\Soket-Chat\\\\Frontend\\\\src\\\\components\\\\Chat\\\\actions\\\\Input.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SocketContext from \"../../../context/SocketContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Input(_ref) {\n  _s();\n  let {\n    message,\n    setMessage,\n    textRef,\n    socket\n  } = _ref;\n  const {\n    activeConversation\n  } = useSelector(state => state.chat);\n  const [typing, setTyping] = useState(false);\n  const onChangeHandler = e => {\n    setMessage(e.target.value);\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", activeConversation._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    let timer = 1000;\n    setTimeout(() => {\n      let timeNow = new Date().getTime();\n      let timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timer && typing) {\n        socket.emit(\"stop typing\", activeConversation._id);\n        setTyping(false);\n      }\n    }, timer);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"dark:bg-dark_hover_1 dark:text-dark_text_1 outline-none h-[45px] w-full flex-1 rounded-lg pl-4\",\n      placeholder: \"Type a message\",\n      value: message,\n      onChange: onChangeHandler,\n      ref: textRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Input, \"4JPWYsBnyzmZdJk5R8DdEFJSSZo=\", false, function () {\n  return [useSelector];\n});\n_c = Input;\nconst InputWithSocket = props => /*#__PURE__*/_jsxDEV(SocketContext.Consumer, {\n  children: socket => /*#__PURE__*/_jsxDEV(Input, {\n    ...props,\n    socket: socket\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 18\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 3\n}, this);\n_c2 = InputWithSocket;\nexport default InputWithSocket;\nvar _c, _c2;\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"InputWithSocket\");","map":{"version":3,"names":["useState","useSelector","SocketContext","jsxDEV","_jsxDEV","Input","_ref","_s","message","setMessage","textRef","socket","activeConversation","state","chat","typing","setTyping","onChangeHandler","e","target","value","emit","_id","lastTypingTime","Date","getTime","timer","setTimeout","timeNow","timeDiff","className","children","type","placeholder","onChange","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","InputWithSocket","props","Consumer","_c2","$RefreshReg$"],"sources":["E:/Soket-chat/Soket-Chat/Frontend/src/components/Chat/actions/Input.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SocketContext from \"../../../context/SocketContext\";\n\nfunction Input({ message, setMessage, textRef, socket }) {\n  const { activeConversation } = useSelector((state) => state.chat);\n\n  const [typing, setTyping] = useState(false);\n  const onChangeHandler = (e) => {\n    setMessage(e.target.value);\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", activeConversation._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    let timer = 1000;\n    setTimeout(() => {\n      let timeNow = new Date().getTime();\n      let timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timer && typing) {\n        socket.emit(\"stop typing\", activeConversation._id);\n        setTyping(false);\n      }\n    }, timer);\n  };\n  return (\n    <div className=\"w-full\">\n      <input\n        type=\"text\"\n        className=\"dark:bg-dark_hover_1 dark:text-dark_text_1 outline-none h-[45px] w-full flex-1 rounded-lg pl-4\"\n        placeholder=\"Type a message\"\n        value={message}\n        onChange={onChangeHandler}\n        ref={textRef}\n      />\n    </div>\n  );\n}\n\nconst InputWithSocket = (props) => (\n  <SocketContext.Consumer>\n    {(socket) => <Input {...props} socket={socket} />}\n  </SocketContext.Consumer>\n);\nexport default InputWithSocket;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,aAAa,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,KAAKA,CAAAC,IAAA,EAA2C;EAAAC,EAAA;EAAA,IAA1C;IAAEC,OAAO;IAAEC,UAAU;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAL,IAAA;EACrD,MAAM;IAAEM;EAAmB,CAAC,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAEjE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMiB,eAAe,GAAIC,CAAC,IAAK;IAC7BT,UAAU,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC1B,IAAI,CAACL,MAAM,EAAE;MACXC,SAAS,CAAC,IAAI,CAAC;MACfL,MAAM,CAACU,IAAI,CAAC,QAAQ,EAAET,kBAAkB,CAACU,GAAG,CAAC;IAC/C;IACA,IAAIC,cAAc,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;IACzC,IAAIC,KAAK,GAAG,IAAI;IAChBC,UAAU,CAAC,MAAM;MACf,IAAIC,OAAO,GAAG,IAAIJ,IAAI,EAAE,CAACC,OAAO,EAAE;MAClC,IAAII,QAAQ,GAAGD,OAAO,GAAGL,cAAc;MACvC,IAAIM,QAAQ,IAAIH,KAAK,IAAIX,MAAM,EAAE;QAC/BJ,MAAM,CAACU,IAAI,CAAC,aAAa,EAAET,kBAAkB,CAACU,GAAG,CAAC;QAClDN,SAAS,CAAC,KAAK,CAAC;MAClB;IACF,CAAC,EAAEU,KAAK,CAAC;EACX,CAAC;EACD,oBACEtB,OAAA;IAAK0B,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACrB3B,OAAA;MACE4B,IAAI,EAAC,MAAM;MACXF,SAAS,EAAC,gGAAgG;MAC1GG,WAAW,EAAC,gBAAgB;MAC5Bb,KAAK,EAAEZ,OAAQ;MACf0B,QAAQ,EAAEjB,eAAgB;MAC1BkB,GAAG,EAAEzB;IAAQ;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACb;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAAChC,EAAA,CAjCQF,KAAK;EAAA,QACmBJ,WAAW;AAAA;AAAAuC,EAAA,GADnCnC,KAAK;AAmCd,MAAMoC,eAAe,GAAIC,KAAK,iBAC5BtC,OAAA,CAACF,aAAa,CAACyC,QAAQ;EAAAZ,QAAA,EACnBpB,MAAM,iBAAKP,OAAA,CAACC,KAAK;IAAA,GAAKqC,KAAK;IAAE/B,MAAM,EAAEA;EAAO;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAG;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QAEpD;AAACK,GAAA,GAJIH,eAAe;AAKrB,eAAeA,eAAe;AAAC,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}