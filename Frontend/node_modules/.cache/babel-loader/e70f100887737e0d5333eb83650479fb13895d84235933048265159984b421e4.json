{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst AUTH_ENDPOINT = `${process.env.REACT_APP_API_ENDPOINT}/auth`;\nconst initialState = {\n  status: \"\",\n  error: \"\",\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    picture: \"\",\n    status: \"\",\n    token: \"\"\n  }\n};\nexport const registerUser = createAsyncThunk(\"auth/register\", async (values, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const {\n      data\n    } = await axios.post(`${AUTH_ENDPOINT}/register`, {\n      ...values\n    });\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.response.data.error.message);\n  }\n});\nexport const loginUser = createAsyncThunk(\"auth/login\", async (values, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const {\n      data\n    } = await axios.post(`${AUTH_ENDPOINT}/login`, {\n      ...values\n    });\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.response.data.error.message);\n  }\n});\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logout: state => {\n      state.status = \"\";\n      state.error = \"\";\n      state.user = {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        picture: \"\",\n        status: \"\",\n        token: \"\"\n      };\n    },\n    changeStatus: (state, action) => {\n      state.status = action.payload;\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(registerUser.pending, (state, action) => {\n      state.status = \"loading\";\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.error = \"\";\n      state.user = action.payload.user;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n    }).addCase(loginUser.pending, (state, action) => {\n      state.status = \"loading\";\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.error = \"\";\n      state.user = action.payload.user;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout,\n  changeStatus\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","AUTH_ENDPOINT","process","env","REACT_APP_API_ENDPOINT","initialState","status","error","user","id","name","email","picture","token","registerUser","values","_ref","rejectWithValue","data","post","response","message","loginUser","_ref2","userSlice","reducers","logout","state","changeStatus","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["E:/Soket-chat/Soket-Chat/Frontend/src/features/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst AUTH_ENDPOINT = `${process.env.REACT_APP_API_ENDPOINT}/auth`;\n\nconst initialState = {\n  status: \"\",\n  error: \"\",\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    picture: \"\",\n    status: \"\",\n    token: \"\",\n  },\n};\n\nexport const registerUser = createAsyncThunk(\n  \"auth/register\",\n  async (values, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(`${AUTH_ENDPOINT}/register`, {\n        ...values,\n      });\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.response.data.error.message);\n    }\n  }\n);\nexport const loginUser = createAsyncThunk(\n  \"auth/login\",\n  async (values, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(`${AUTH_ENDPOINT}/login`, {\n        ...values,\n      });\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.response.data.error.message);\n    }\n  }\n);\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logout: (state) => {\n      state.status = \"\";\n      state.error = \"\";\n      state.user = {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        picture: \"\",\n        status: \"\",\n        token: \"\",\n      };\n    },\n    changeStatus: (state, action) => {\n      state.status = action.payload;\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(registerUser.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(registerUser.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.error = \"\";\n        state.user = action.payload.user;\n      })\n      .addCase(registerUser.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.payload;\n      })\n      .addCase(loginUser.pending, (state, action) => {\n        state.status = \"loading\";\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        state.error = \"\";\n        state.user = action.payload.user;\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { logout, changeStatus } = userSlice.actions;\n\nexport default userSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}